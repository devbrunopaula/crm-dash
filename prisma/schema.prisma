// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING") 
}

model Company {
  id          String    @id @default(dbgenerated("concat('com_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  companyName String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  account     Account[]

  @@unique([id])
}

model User {
  id       String   @id @default(dbgenerated("concat('usr_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  email    String   @unique
  name     String?
  password String?
  isAdmin  Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  companyId      String?        @map("companyId")
  CallActivities CallActivity[]
}

model Account {
  id           String         @id @default(dbgenerated("concat('acc_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  accountName  String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  CallActivity CallActivity[]
  company      Company        @relation(fields: [companyId], references: [id])
  companyId    String
}

model CallActivity {
  id        String   @id @default(dbgenerated("concat('act_', replace(cast(gen_random_uuid() as text), '-', ''))")) @db.Text
  subject   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String
  companyId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
